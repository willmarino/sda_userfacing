import React from 'react';

const AboutPage = () => (
  <div className="about-page">
    {/* <div id="test-square"></div> */}
    <p>Hello! Welcome to the user facing component of a distributed system which I've built in order to analyze market data. I started out this project looking to explore a couple different areas in which I was interested, but had little experience with. On the tech side of things, since I finished my programming bootcamp last January, I had been curious about how I could transition my web development skillset towards developing more complex, analytical systems. In order to build a system which would perform intelligent operations upon data, I needed access to a steady stream of data which I could use to answer a compelling open question. Nothing seemed to fit this criteria better than stock market data. So, after searching for a source which would fit my needs, I found the TD Ameritrade API, and shortly thereafter began building a system which would receive, save, analyze, and display information which I was receiving at a (relatively) high speed: 1 message per second.</p>
    <hr></hr>
    <p>The system consists of a few different servers, two using Node and one using Flask, one MongoDB database, and one user interface/backend combo using React/Redux and Node. The focal point of the system is one of the Node servers, which we can call Node Server A, serves as a websocket client, recieving data from the TD Ameritrade API. After it receives a websocket message, it cleans the data, saves it to my MongoDB database via the Mongoose API, and sends it to my Flask server, which we can call Flask Server A. Once Flask Server A receives the information, it creates a pandas dataframe with it, does some processing, saves it to a local cache (just a dictionary, not a third party lib), and then uses it as input to make a prediction with a linear regression. The linear regression then trains itself based on the error present in that prediction, and sends those results back to Node Server A. Once Node Server A receives this information, it saves it to MongoDB, and the process begins again.</p> 
    <hr></hr>
    <p>An honourable mention goes to the second Node server, which we can call Node Server B. Node Server B's only job is to handle the time-sensitive, multi-step, credentials interactions which are necessary to work with the TD Ameritrade API. So, because Node Server B is running in the background saving credentials to MongoDB, Node Server A never has to worry about whether the credentials it is using are outdated, and can always just look in my database to see what it should use, instead of chaining promises together every time a different request needs to be made. This made my code in Server A much cleaner, and made any new features I wish to pursue there much easier to write.</p>
    <hr></hr>
    <p>The user-facing component of the system is the Node/React/Redux application which you are viewing right now! It is detached from the other Node servers in order to keep Node Server A's code as simple and lightweight as possible. It gets all of its information by making queries into MongoDB, and as you can see on the main/home page, during market hours it is capable of displaying the predictions of my linear regression in real time using the ReCharts library.</p>
    <hr></hr>
    <p>I have a few ideas for the future of this project, all of which revolve around scaling up what my system is capable of. First, I want to increase the volume and depth of the data that I am taking in. This can be done by either taking in the same sort of data I am right now, but on multiple stocks, instead of just one, or it can be done by using a large-scale data vendor instead of the TD Ameritrade API. I am currently considering which road to go down with regards to this issue. Secondly, I would like to upgrade the complexity of my analysis. I would most likely do this by creating a second Flask server, which would perform similarly to Flask Server A, but would apply a more rigorous analysis to the data it took in, via more reliance on pandas, numpy, and scikit-learn.</p>
  </div>
)

export default AboutPage;